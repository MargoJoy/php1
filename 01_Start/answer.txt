Пункт 3
-------------

2*2
var_dump выдал значение int 4, 2*2 = 4 является целым числом (int).

3 / 1
var_dump выдал значение int 3, 3/1 = 3 также целое число (int).

1 / 3
var_dump выдал значение float(0.33333333333333),  3/1 = 0.33333333333333 не является целым
числом, получает тип (float)- число с плавающей точкой.

'20cats' + 40
var_dump выдал значение int(60) ,  20 + 40 = 60. PHP привел строку к числовому типу, так как нашел 20,
все остальное было упразднено.

18 % 4
Деление по модулю или целочисленное деление, то есть 18 = 4+4+4+4 + 2, в числе 18- 4 полные
четверки, которые в сумме дают 16, до 18 не хватает 2, значит целочисленный остаток от
деления 18%4 = 2, и это снова тип int, var_dump выдал значение int 2

Пункт 4
-------------

Выражением является все что имеет значение, любая строка, чисто, функция и т.д., например, число 5 имеет значение 5,
и echo 5; выведет в поток 5. Основные формы выражения это константы и переменные.
Так $a = 2, то есть к переменной $а присвоено значение 2, значит $a имеет
значение, следовательно является выражением.
Во втором случае ($x = ($y = 12) - 8;) присходит последовательное присвоение, переменная $y = 12, в то
время как $x = $y - 8, значит переменной $x присвоено значение полученное в результате
вычитания 12-8, $x = 4.

Пункт 5
-------------

Операторы сравнения- как ясно из названия позволяют сравнивать типы и значения, ответом является либо
 boolean true (истина), либо boolean false (ложь).

1 == 1.0  или 1 равно 1.0, разные типы (int и float), но PHP преобразует типы, и опираясь на значение решает что,
вырожение верное (boolean true).

1 === 1.0 тождественное равенство, не преобразует типы, для тождественного равенста результат будет истеным
 только в том случае, если будут равны и типы и значения, в примере 1 === 1.0, ответ boolean false, так как 1(int),
 а 1.0(float) имеют разные типы.

'02' == 2 как уже известно PHP преобразует   string в integer, значит равенство верно boolean true.

'02' === 2 Разные типы тождественно не ровны ответ boolean false

'02' == '2' string в integer, ответ boolean true

Пункт 6
-------------

xor это логический оператор, обозначающий исключающее или, верно если один из операторов true, а второй false.

В примере $x = true xor true возвращается boolean true, это происходит из-за приоритета  операторов (схоже с 2 + 2 * 2),
 можно управлять приоритетом с помощью круглых скобок например $x = (true xor true), вернет верное значение по
 отношению к xor, выведет boolean false.
То есть в $x = true xor true; получается что $x = true и на этом все, так как то что получается у логического
 оператора (true xor true) ни куда не сохраняется, то есть дословно выражение выглядит так ($x = true) xor (true)
 и выводим мы только значение $x, но не все выражение целиком.